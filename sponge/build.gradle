buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            name = 'sponge'
            url = 'https://repo.spongepowered.org/maven'
        }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'

ext {
    sponge = "7.3.0"
}

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: "stable", version: "39-1.12"
}

repositories {
    mavenCentral()
    maven {
        name 'sponge-repo'
        url 'https://repo.spongepowered.org/repository/sponge-legacy'
    }
    maven { url = 'https://jitpack.io' }
    repositories {
        maven {
            name = "ImpactDev"
            url = "https://maven.impactdev.net/repository/development/"
        }
    }
}

dependencies {
    compile project(':api')
    compile project(':common')

    // Forge
    minecraft "net.minecraftforge:forge:1.12.2-14.23.5.2855"

    // Sponge
    shadow 'org.spongepowered:spongeapi:7.3.0'
    annotationProcessor 'org.spongepowered:spongeapi:7.3.0'

    // Mixin
    shadow 'org.spongepowered:mixin:0.8.5'
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    // Misc
    shadow "com.ichorpowered:protocolcontrol:0.0.3"
    shadow "me.lucko:jar-relocator:1.5"
}

blossom {
    blossomSourceReplacementJava.output = file("$buildDir/sources/java")
    replaceToken '@version@', version
}

jar {
    manifest.attributes(
            'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
            'MixinConfigs': 'mixins.impactor.json',
            'FMLCorePluginContainsFMLMod': 'true',
            'ForceLoadAsMod': 'true',
            'TweakOrder': 0,
    )
}

shadowJar {
    archiveName = "Impactor-Sponge-${sponge}-${version}.jar"

    dependencies {
        include project(":api")
        include project(":common")
    }

    // Shaded Components
//    relocate 'com.github.ben-manes', 'com.nickimpact.impactor.relocations.com.github.ben-manes'
//    relocate 'me.lucko.jarrelocator', 'com.nickimpact.impactor.relocations.me.lucko.jarrelocator'
    relocate 'net.bytebuddy', 'net.impactdev.impactor.relocations.bytebuddy'

    // Setup Kyori Event Shading. Due to additional shading made by Protocol Control, we need to handle
    // the shading specifically here.
    //
    // In other words, we should only attempt to relocate everything but the Subscribe annotation,
    // as Impactor uses it's own version.
    relocate ('net.kyori.event', 'net.impactdev.impactor.relocations.eventbus') {
        exclude 'net.kyori.event.method.annotation.Subscribe'
    }
    relocate ('net.kyori.adventure', 'net.impactdev.impactor.relocations.adventure')
    relocate ('net.kyori.examination', 'net.impactdev.impactor.relocations.examination')
    relocate("net.kyori", "com.ichorpowered.protocolcontrol.lib.kyori")

//    relocate 'ninja.leaping.configurate', 'com.nickimpact.impactor.relocations.ninja.leaping.configurate'
//    relocate 'org.yaml', 'com.nickimpact.impactor.relocations.org.yaml'
//    relocate 'org.checkerframework', 'com.nickimpact.impactor.relocations.org.checkerframework'
//    relocate 'org.objectweb', 'com.nickimpact.impactor.relocations.objectweb'
    //relocate 'co.aikar', 'com.nickimpact.impactor.relocations.co.aikar'

    // Storage Based Relocations
    relocate ('com.zaxxer.hikari', 'net.impactdev.impactor.relocations.hikari')
    relocate ('org.mariadb.jdbc', 'net.impactdev.impactor.relocations.mariadb')
    relocate ('com.mysql', 'net.impactdev.impactor.relocations.mysql')
}

reobf {
    shadowJar {}
}

mixin {
    importConfig 'mixins'
    add sourceSets.main, "mixins.impactor.refmap.json"
}

build.dependsOn reobfShadowJar
